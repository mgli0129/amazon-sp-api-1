/*
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, see the [Catalog Items API Use Case Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/catalog-items-api-use-case-guide/catalog-items-api-use-case-guide_2020-12-01.md).
 *
 * OpenAPI spec version: 2020-12-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.spapi.models.catalogitems;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Description of a classification that can be used to get more fine-grained search results.
 */
@Schema(description = "Description of a classification that can be used to get more fine-grained search results.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-19T18:19:15.019584+08:00[Asia/Shanghai]")
public class ClassificationRefinement {
  @SerializedName("numberOfResults")
  private Integer numberOfResults = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("classificationId")
  private String classificationId = null;

  public ClassificationRefinement numberOfResults(Integer numberOfResults) {
    this.numberOfResults = numberOfResults;
    return this;
  }

   /**
   * The estimated number of results that would still be returned if refinement key applied.
   * @return numberOfResults
  **/
  @Schema(required = true, description = "The estimated number of results that would still be returned if refinement key applied.")
  public Integer getNumberOfResults() {
    return numberOfResults;
  }

  public void setNumberOfResults(Integer numberOfResults) {
    this.numberOfResults = numberOfResults;
  }

  public ClassificationRefinement displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Display name for the classification.
   * @return displayName
  **/
  @Schema(required = true, description = "Display name for the classification.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public ClassificationRefinement classificationId(String classificationId) {
    this.classificationId = classificationId;
    return this;
  }

   /**
   * Identifier for the classification that can be used for search refinement purposes.
   * @return classificationId
  **/
  @Schema(required = true, description = "Identifier for the classification that can be used for search refinement purposes.")
  public String getClassificationId() {
    return classificationId;
  }

  public void setClassificationId(String classificationId) {
    this.classificationId = classificationId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationRefinement classificationRefinement = (ClassificationRefinement) o;
    return Objects.equals(this.numberOfResults, classificationRefinement.numberOfResults) &&
        Objects.equals(this.displayName, classificationRefinement.displayName) &&
        Objects.equals(this.classificationId, classificationRefinement.classificationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfResults, displayName, classificationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationRefinement {\n");

    sb.append("    numberOfResults: ").append(toIndentedString(numberOfResults)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    classificationId: ").append(toIndentedString(classificationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
